import python_weather
from translatepy.translators.yandex import YandexTranslate
ytranslate = YandexTranslate()
import logging
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = '5874059076:AAEjp5hnjswkDs63wWfN68BU1tzNzT0eu1c'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
   kb = [[types.KeyboardButton(text="/–°—Ç–∞—Ä—ÇüöÄ"), types.KeyboardButton(text="/–ü–æ–º–æ—â—å‚ûï")],]
   keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, one_time_keyboard=True)
   await message.reply("–ì–æ—Ç–æ–≤–æ!", reply_markup=keyboard)

@dp.message_handler(commands=['–°—Ç–∞—Ä—ÇüöÄ'])
async def start(message: types.Message):
    await message.reply("–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—é –ø–æ–≥–æ–¥—É.")

@dp.message_handler(commands=['–ü–æ–º–æ—â—å‚ûï'])
async def help(message: types.Message):
    await message.reply("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≥–æ—Ä–æ–¥.\n–ï—Å–ª–∏ –≤—ã–¥–∞–µ—Ç –Ω–µ —Ç–æ—Ç –≥–æ—Ä–æ–¥, –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –≤ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.")

@dp.message_handler()
async def weather(message: types.Message):
    async with python_weather.Client(format=python_weather.IMPERIAL) as client:
        weather = await client.get(message.text)
        celsius = ((weather.current.temperature - 32) * 5) / 9
    weather_msg = f"{ytranslate.translate(weather.nearest_area.name, 'Russian')}, {ytranslate.translate(weather.nearest_area.country, 'Russian')} {str(weather.location)}\n"
    weather_msg += f"–¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(celsius)}¬∞C\n"
    weather_msg += f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã: {ytranslate.translate(weather.current.description, 'Russian')}\n"
    if int(celsius) <= 20:
        weather_msg += "–û–¥–µ–≤–∞–π—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ!\n"
    else: weather_msg += "–û–¥–µ–≤–∞–π—Ç–µ—Å—å –ø–æ–ª–µ–≥—á–µ!\n"
    weather_msg += " –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è:\n"
    for forecast in weather.forecasts:
        weather_msg += f"  {forecast.date}\n"
        for hourly in forecast.hourly:
         weather_msg += f"–í {hourly.time.hour} —á. {round(((hourly.temperature - 32) * 5) / 9)}¬∞C, {ytranslate.translate(hourly.description, 'Russian')}.\n"
    if str(weather.location) == "None":
        weather_msg = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞."
    await message.answer(weather_msg)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
